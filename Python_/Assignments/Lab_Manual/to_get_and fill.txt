Experiment 1: Introduction to Python 
 Write a Python program to print "Hello, World!". 
 Write a Python program to take user input and print it. 
 Write a Python program to swap two numbers. 
Experiment 2: Control Structures 
 Write a Python program to check if a number is even or odd. 
 Write a Python program to find the factorial of a number using loops. 
 Write a Python program to print Fibonacci series up to n terms. 
Experiment 3: Functions and Modules 
 Write a Python program to find the largest number among three numbers using a function. 
 Write a Python program to check if a number is prime or not using a function. 
 Write a Python program to generate a random number between a given range using a module. 
Experiment 4: Lists and Strings 
 Write a Python program to find the sum and average of elements in a list. 
 Write a Python program to count the number of vowels in a string. 
 Write a Python program to reverse a string using slicing. 
Experiment 5: Dictionaries and Sets 
 Write a Python program to demonstrate dictionary operations (add, delete, update). 
 Write a Python program to find the intersection and union of two sets. 
 Write a Python program to count the frequency of elements in a list using a dictionary. 
Experiment 6: File Handling 
 Write a Python program to read and display the contents of a file. 
 Write a Python program to write user input to a file. 
 Write a Python program to count the number of words in a file. 
Experiment 7: Object-Oriented Programming (OOP) 
 Write a Python program to demonstrate class and object creation. 
 Write a Python program to demonstrate inheritance (base and derived classes). 
 Write a Python program to demonstrate method overriding.
Experiment 8: Exception Handling
 Write a Python program to handle ZeroDivisionError and IndexError exceptions. 
 Write a Python program to demonstrate the use of try-except-else-finally block. 
 Write a Python program to create a custom exception and raise it. 
Experiment 9: Recursion 
 Write a Python program to find the factorial of a number using recursion. 
 Write a Python program to calculate the nth Fibonacci number using recursion. 
 Write a Python program to implement binary search using recursion. 
Experiment 10: Sorting and Searching Algorithms 
 Write a Python program to implement bubble sort and analyze its time complexity. 
 Write a Python program to implement binary search on a sorted list. 
 Write a Python program to implement linear search and analyze its time complexity. 
Experiment 11: Data Structures (Optional) 
 Write a Python program to implement a stack using lists. 
 Write a Python program to implement a queue using lists. 
 Write a Python program to implement a binary search tree (BST). 
Experiment 12: Introduction to NumPy and Pandas (Data Handling) 
 Write a Python program to create a NumPy array and perform basic operations (addition, 
subtraction). 
 Write a Python program to create a Pandas DataFrame and perform basic operations (selection, 
filtering).